# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
from textwrap import fill
from tkinter import *
from sigaa import *
from turtle import left
from pathlib import Path
from tkinter import BOTTOM, LEFT, RIGHT, Frame, Tk, Canvas, Text, Button, PhotoImage

# from abre_boletim import *
# Explicit imports to satisfy Flake8


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def adequa_tamanho(s):
    resultado = ""
    if len(s) > 22:
        s = s.split()
        for i in s:
            if i == "DE" or i == "DO":
                continue
            else:
                resultado += str(i[0])
        return resultado
    else:
        return s


def round_rectangle(x1, y1, x2, y2, local, radius=25, **kwargs):

    points = [
        x1 + radius,
        y1,
        x1 + radius,
        y1,
        x2 - radius,
        y1,
        x2 - radius,
        y1,
        x2,
        y1,
        x2,
        y1 + radius,
        x2,
        y1 + radius,
        x2,
        y2 - radius,
        x2,
        y2 - radius,
        x2,
        y2,
        x2 - radius,
        y2,
        x2 - radius,
        y2,
        x1 + radius,
        y2,
        x1 + radius,
        y2,
        x1,
        y2,
        x1,
        y2 - radius,
        x1,
        y2 - radius,
        x1,
        y1 + radius,
        x1,
        y1 + radius,
        x1,
        y1,
    ]

    return local.create_polygon(points, **kwargs, smooth=True)


# Executa a função de abrir o sigaa -> para cada elemento no dicionário retornado cria
# um texto e uma caixa no canva passado como parâmetro
def acao_botao(canva_nota, canva_faltas, frame):
    dicionario = abre_boletim()
    # canva_faltas.create_image(10, 10, image=bloco)
    canva_faltas.create_text(
        60.0,
        12.0,
        anchor="nw",
        text="Faltas",
        fill="#ffffff",
        font=("ZCOOLXiaoWei Regular", 20 * -1),
    )

    contador = 0
    round_rectangle(
        0, 0, 528, len(dicionario) * 45, canva_nota, radius=31, fill="#242A33"
    )
    for i in dicionario.keys():
        canva_nota.create_image(211.0, 32 + 44 * contador, image=bloco)
        canva_nota.create_text(
            60.0,
            20 + contador * 44.0,
            anchor="nw",
            text=adequa_tamanho(i),
            fill="#F2CE1B",
            font=("ZCOOLXiaoWei Regular", 20 * -1),
        )
        canva_nota.create_text(
            430.0,
            20 + contador * 44.0,
            anchor="nw",
            text=dicionario[i],
            fill="#F2CE1B",
            font=("ZCOOLXiaoWei Regular", 20 * -1),
        )
        contador += 1
    canva_nota.pack()
    if contador > 5:
        vbar = Scrollbar(frame, orient=VERTICAL)
        vbar.pack(side=RIGHT, fill=Y)
        vbar.config(command=canva_nota.yview)
        canva_nota.config(yscrollcommand=vbar.set)
        canva_nota.pack(side=LEFT, expand=True, fill=BOTH)
        canva_nota.config(scrollregion=(-1, -1, 529, contador * 45))


window = Tk()
bloco = PhotoImage(file=relative_to_assets("image_2.png"))
window.geometry("780x520")
window.configure(bg="#2D3440")


canvas = Canvas(
    window,
    bg="#2D3440",
    height=520,
    width=780,
    bd=0,
    highlightthickness=0,
    relief="ridge",
)
Canvas_notas = Canvas()
Canvas_faltas = Canvas()
my_rectangle = round_rectangle
central = Frame()
canvas.place(x=0, y=0)
button_image_1 = PhotoImage(file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: acao_botao(Canvas_notas, Canvas_faltas, central),
    relief="flat",
)
button_1.place(x=4.0, y=479.0, width=110.0, height=30.0)

central = Frame(window, width=528, height=500)
central.place(x=16, y=110)

Canvas_notas = Canvas(
    central,
    bg="#2D3440",
    width=528,
    height=290,
    bd=0,
    highlightthickness=0,
    relief="ridge",
)

Canvas_faltas = Canvas(
    central,
    bg="#2D3440",
    width=528,
    height=50,
    bd=0,
    highlightthickness=0,
    relief="ridge",
)
# Canvas_faltas.place(y=1500)
Canvas_faltas.pack(side=BOTTOM, fill=X)
Canvas_notas.pack()


canvas.create_rectangle(568.0, 0.0, 780.0, 520.0, fill="#242A33", outline="")


canvas.create_text(
    80.0,
    20.0,
    anchor="nw",
    text="Notas",
    fill="#F2CE1B",
    font=("ZCOOLXiaoWei Regular", 64 * -1),
)

canvas.create_text(
    597.0,
    19.0,
    anchor="nw",
    text="Atividades",
    fill="#FFFFFF",
    font=("ZCOOLXiaoWei Regular", 32 * -1),
)


window.resizable(False, False)
window.mainloop()
